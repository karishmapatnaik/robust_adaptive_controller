% Matlab function to calculate the current MOI.
% It takes the values of arm angles,cenetr sphere mass M,
% center sphere radius R, point mass m, arm length l, height between two
% propellers h

function J = current_J(beta,M,R,m,l,h)
% calculate CG
    cg = calculate_cg(beta,M,m,l,h);
% calculate each MOI element
    J(1) = (2/5)*(M*R^2) + ...
          ((M+2*m)*(cg(2)^2+cg(3)^2)) + ...
          (m*((-l*sin(beta(1)) - cg(2))^2 + (h - cg(3))^2)) + ...
          (m*((l*sin(beta(2)) - cg(2))^2 + (h - cg(3))^2));
    J(2) = (2/5)*(M*R^2) + ...
          (M*(cg(1)^2 + cg(3)^2)) + ...
          (m*((l-cg(1))^2 + cg(3)^2)) + ...
          (m*((-l-cg(1))^2 + cg(3)^2)) + ...
          (m*((-l*cos(beta(1)) - cg(1))^2 + (h - cg(3))^2)) + ...
          (m*((-l*cos(beta(2)) - cg(1))^2 + (h - cg(3))^2));
    J(3) = (2/5)*(M*R^2) + ...
          (M*(cg(1)^2 + cg(2)^2)) + ...
          (m*((l-cg(1))^2 + cg(2)^2)) + ...
          (m*((-l-cg(1))^2 + cg(2)^2)) + ...
          (m*((-l*sin(beta(1)) - cg(2))^2+(-l*cos(beta(1)) - cg(1))^2)) + ...
          (m*((l*sin(beta(2)) - cg(2))^2+(-l*cos(beta(2)) - cg(1))^2));
    J(4) = (M*cg(2)*cg(1)) + ...
          (2*m*cg(2)*cg(1)) + ...
          (m*(-l*sin(beta(1)) - cg(2))*(-l*cos(beta(1)) - cg(1)));
    J(5) = (M*cg(1)*cg(3)) + ...          
          (2*m*cg(1)*cg(3)) + ...
          (m*(-l*cos(beta(1)) - cg(1))*(h - cg(3))) + ...
          (m*(-l*cos(beta(2)) - cg(1))*(h - cg(3)));
    J(6) = (M*cg(2)*cg(3)) + ...
          (2*m*cg(2)*cg(3)) + ...
          (m*(-l*sin(beta(1)) - cg(2))*(h - cg(3))) + ...
          (m*(l*sin(beta(2)) - cg(2))*(h - cg(3)));
end